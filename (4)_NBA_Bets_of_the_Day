{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f30c32b2",
   "metadata": {},
   "outputs": [],
   "source": [
    "pip install nba_api"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "98836c89",
   "metadata": {
    "code_folding": [],
    "deletable": false,
    "editable": false,
    "run_control": {
     "frozen": true
    }
   },
   "outputs": [],
   "source": [
    "def function_template():\n",
    "    # get function data\n",
    "    function_name = sys._getframe().f_code.co_name\n",
    "    try : pass    \n",
    "    except Exception as e: \n",
    "        exc_type, exc_obj, exc_tb = sys.exc_info() ; start = time.time()\n",
    "        print(f'Error in {blue(function_name)} ; throws\\\\n{red(e)}, a {exc_type} on line {exc_tb.tb_lineno}.')\n",
    "    stop = time.time() ; duration = stop-start ; \n",
    "    print(f\"Time to _ _ _ _ : took {red(np.round(duration))} seconds total.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "762c2301",
   "metadata": {
    "code_folding": [
     0,
     3,
     8
    ]
   },
   "outputs": [],
   "source": [
    "# run imports\n",
    "# import matplotlib.pyplot as plt\n",
    "try : import numpy as np\n",
    "except : \n",
    "    !pip install numpy\n",
    "    import numpy as np\n",
    "\n",
    "try : import pandas as pd\n",
    "except : \n",
    "    !pip install pandas\n",
    "    import pandas as pd\n",
    "\n",
    "import sys\n",
    "import os # for scanning through file explorer folders (jobdf)\n",
    "from difflib import SequenceMatcher # string similarity\n",
    "import itertools # iterate through Z-drive\n",
    "import string # for \n",
    "\n",
    "from simple_colors import * # for printing in red when debugging\n",
    "import time"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4bcdd8d6",
   "metadata": {},
   "source": [
    "## functions from Medium article\n",
    "https://medium.com/@larry.prestosa/nba-data-science-project-943961f5dd06"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "cdeca16c",
   "metadata": {
    "code_folding": []
   },
   "outputs": [],
   "source": [
    "# nba_api.stats functions/imports \n",
    "\n",
    "# get all players\n",
    "from nba_api.stats.static import players\n",
    "# get all teams\n",
    "from nba_api.stats.static import teams\n",
    "# get all player stats\n",
    "from nba_api.stats.endpoints import playercareerstats\n",
    "# find games by year/team, etc.\n",
    "from nba_api.stats.endpoints import leaguegamefinder\n",
    "pd.set_option('display.max_columns', 30)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "eeefbca7",
   "metadata": {},
   "outputs": [],
   "source": [
    "import json\n",
    "import csv\n",
    "# # create all_players.csv in same path as .ipynb\n",
    "# get_all_players()\n",
    "# \"C:\\Users\\Rafal Adamczyk\\Documents\\portfolio projects\\(4)_NBA\\all_players.csv\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bfbc4a31",
   "metadata": {
    "heading_collapsed": true
   },
   "source": [
    "### working with players"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "06850949",
   "metadata": {
    "code_folding": [
     3
    ],
    "deletable": false,
    "editable": false,
    "hidden": true,
    "run_control": {
     "frozen": true
    }
   },
   "outputs": [],
   "source": [
    "# def get_all_players():\n",
    "# get_all_players in NBA across all time ; one time function to write\n",
    "# \"C:\\Users\\Rafal Adamczyk\\Documents\\portfolio projects\\(4)_NBA\\all_players.csv\"\n",
    "def get_all_players():\n",
    "    all_players = players.get_players()\n",
    "\n",
    "    # Print details of each player.\n",
    "    for player in all_players:\n",
    "        print(player['full_name'], player['id'])\n",
    "\n",
    "    # Open the CSV file for writing.\n",
    "    with open('all_players.csv', mode='w', newline='', encoding='utf-8') as file:\n",
    "        writer = csv.writer(file)\n",
    "\n",
    "        # Write the header row.\n",
    "        writer.writerow(['full_name', 'id'])\n",
    "\n",
    "        # Write the player details.\n",
    "        for player in all_players:\n",
    "            writer.writerow([player['full_name'], player['id']])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e9a43ba9",
   "metadata": {
    "code_folding": [
     0,
     3
    ],
    "deletable": false,
    "editable": false,
    "hidden": true
   },
   "outputs": [],
   "source": [
    "# def get_player_stats(player_id):\n",
    "# input player_id : (int) player's id number to get stats for\n",
    "# return player_df : (pd.df) df of player's stats across all seasons\n",
    "def get_player_stats(player_id):\n",
    "    # Nikola JokiÄ‡\n",
    "    career = playercareerstats.PlayerCareerStats(player_id)\n",
    "    # pandas data frames (optional: pip install pandas)\n",
    "    player_df = career.get_data_frames()[0]\n",
    "    # json\n",
    "    json_string = career.get_json()\n",
    "    json_obj = json.loads(json_string)\n",
    "    json_print = json.dumps(json_obj, indent=4)\n",
    "    # dictionary\n",
    "    player_dict = career.get_dict()\n",
    "    return player_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "94242f9b",
   "metadata": {
    "code_folding": [],
    "deletable": false,
    "editable": false,
    "hidden": true
   },
   "outputs": [],
   "source": [
    "# def find_player(search_string):\n",
    "# search through all all_players.csv for player name (first or last)\n",
    "# input search_string : (str) first/last name of player to search for \n",
    "# return matching_players : (pd.df) filters players_df for certain names\n",
    "def find_player(search_string):\n",
    "    # Read the CSV file into a DataFrame\n",
    "    players_df = pd.read_csv('all_players.csv')\n",
    "    # Convert both search_string and the 'full_name' column to lower case for comparison\n",
    "    matching_players = players_df[players_df['full_name'].str.lower().str.contains(search_string.lower())]\n",
    "    print(matching_players)\n",
    "    return matching_players"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2ee6f32c",
   "metadata": {
    "hidden": true
   },
   "outputs": [],
   "source": [
    "matching_players = find_player('lebron')\n",
    "lebron_stats = get_player_stats('2544')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7a1cc687",
   "metadata": {},
   "source": [
    "### working with teams"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "702c8ffe",
   "metadata": {
    "code_folding": [
     1
    ],
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# def get_all_teams():\n",
    "def get_all_teams():\n",
    "    function_name = sys._getframe().f_code.co_name\n",
    "    try :\n",
    "        # Get the list of all NBA teams using the nba_api\n",
    "        nba_teams = teams.get_teams()\n",
    "        # Convert the list of dictionaries into a DataFrame\n",
    "        teams_df = pd.DataFrame(nba_teams)\n",
    "        return teams_df\n",
    "    except Exception as e: \n",
    "        exc_type, exc_obj, exc_tb = sys.exc_info() ; start = time.time()\n",
    "        print(f'Error in {blue(function_name)} ; throws\\\\n{red(e)}, a {exc_type} on line {exc_tb.tb_lineno}.')\n",
    "\n",
    "# Example usage of the get_all_teams function.\n",
    "teams_df = get_all_teams()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "20c9413c",
   "metadata": {
    "code_folding": [
     0,
     12,
     35
    ],
    "deletable": false,
    "editable": false
   },
   "outputs": [],
   "source": [
    "# def combine_team_games(df, keep_method='home'):\n",
    "# Combine a TEAM_ID-GAME_ID unique table into rows by game. Slow.\n",
    "# input df : (pd.df)\n",
    "# input keep_method : {'home', 'away', 'winner', 'loser', ``None``}, default 'home'\n",
    "# 'home' : Keep rows where TEAM_A is the home team.\n",
    "# 'away' : Keep rows where TEAM_A is the away team.\n",
    "# 'winner' : Keep rows where TEAM_A is the losing team.\n",
    "# 'loser' : Keep rows where TEAM_A is the winning team.\n",
    "# ``None`` : Keep all rows. Will result in an output DataFrame the same length as the input DataFrame.\n",
    "# return result : (pd.df)\n",
    "def combine_team_games(df, keep_method='home'):\n",
    "    function_name = sys._getframe().f_code.co_name\n",
    "    try : \n",
    "        # Join every row to all others with the same game ID.\n",
    "        joined = pd.merge(df, df, suffixes=['_A', '_B'],\n",
    "                          on=['SEASON_ID', 'GAME_ID', 'GAME_DATE'])\n",
    "        # Filter out any row that is joined to itself.\n",
    "        result = joined[joined.TEAM_ID_A != joined.TEAM_ID_B]\n",
    "        # Take action based on the keep_method flag.\n",
    "        if keep_method is None:\n",
    "            # Return all the rows.\n",
    "            pass\n",
    "        elif keep_method.lower() == 'home':\n",
    "            # Keep rows where TEAM_A is the home team.\n",
    "            result = result[result.MATCHUP_A.str.contains(' vs. ')]\n",
    "        elif keep_method.lower() == 'away':\n",
    "            # Keep rows where TEAM_A is the away team.\n",
    "            result = result[result.MATCHUP_A.str.contains(' @ ')]\n",
    "        elif keep_method.lower() == 'winner':\n",
    "            result = result[result.WL_A == 'W']\n",
    "        elif keep_method.lower() == 'loser':\n",
    "            result = result[result.WL_A == 'L']\n",
    "        else:\n",
    "            raise ValueError(f'Invalid keep_method: {keep_method}')\n",
    "        return result\n",
    "    except Exception as e: \n",
    "        exc_type, exc_obj, exc_tb = sys.exc_info() ; start = time.time()\n",
    "        print(f'Error in {blue(function_name)} ; throws\\\\n{red(e)}, a {exc_type} on line {exc_tb.tb_lineno}.')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "b81be2d1",
   "metadata": {
    "code_folding": [],
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ATL 1610612737\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SEASON_ID</th>\n",
       "      <th>TEAM_ID</th>\n",
       "      <th>TEAM_ABBREVIATION</th>\n",
       "      <th>TEAM_NAME</th>\n",
       "      <th>GAME_ID</th>\n",
       "      <th>GAME_DATE</th>\n",
       "      <th>MATCHUP</th>\n",
       "      <th>WL</th>\n",
       "      <th>MIN</th>\n",
       "      <th>PTS</th>\n",
       "      <th>FGM</th>\n",
       "      <th>FGA</th>\n",
       "      <th>FG_PCT</th>\n",
       "      <th>FG3M</th>\n",
       "      <th>FG3A</th>\n",
       "      <th>FG3_PCT</th>\n",
       "      <th>FTM</th>\n",
       "      <th>FTA</th>\n",
       "      <th>FT_PCT</th>\n",
       "      <th>OREB</th>\n",
       "      <th>DREB</th>\n",
       "      <th>REB</th>\n",
       "      <th>AST</th>\n",
       "      <th>STL</th>\n",
       "      <th>BLK</th>\n",
       "      <th>TOV</th>\n",
       "      <th>PF</th>\n",
       "      <th>PLUS_MINUS</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>22023</td>\n",
       "      <td>1610612737</td>\n",
       "      <td>ATL</td>\n",
       "      <td>Atlanta Hawks</td>\n",
       "      <td>0022301218</td>\n",
       "      <td>2023-12-08</td>\n",
       "      <td>ATL @ PHI</td>\n",
       "      <td>L</td>\n",
       "      <td>241</td>\n",
       "      <td>114</td>\n",
       "      <td>41</td>\n",
       "      <td>104</td>\n",
       "      <td>0.394</td>\n",
       "      <td>13</td>\n",
       "      <td>39</td>\n",
       "      <td>0.333</td>\n",
       "      <td>19</td>\n",
       "      <td>21</td>\n",
       "      <td>0.905</td>\n",
       "      <td>23</td>\n",
       "      <td>32</td>\n",
       "      <td>55</td>\n",
       "      <td>20</td>\n",
       "      <td>3.0</td>\n",
       "      <td>4</td>\n",
       "      <td>13</td>\n",
       "      <td>23</td>\n",
       "      <td>-11.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>22023</td>\n",
       "      <td>1610612737</td>\n",
       "      <td>ATL</td>\n",
       "      <td>Atlanta Hawks</td>\n",
       "      <td>0022301209</td>\n",
       "      <td>2023-12-06</td>\n",
       "      <td>ATL vs. BKN</td>\n",
       "      <td>L</td>\n",
       "      <td>240</td>\n",
       "      <td>113</td>\n",
       "      <td>42</td>\n",
       "      <td>94</td>\n",
       "      <td>0.447</td>\n",
       "      <td>12</td>\n",
       "      <td>35</td>\n",
       "      <td>0.343</td>\n",
       "      <td>17</td>\n",
       "      <td>18</td>\n",
       "      <td>0.944</td>\n",
       "      <td>11</td>\n",
       "      <td>38</td>\n",
       "      <td>49</td>\n",
       "      <td>25</td>\n",
       "      <td>5.0</td>\n",
       "      <td>4</td>\n",
       "      <td>12</td>\n",
       "      <td>23</td>\n",
       "      <td>-1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>22023</td>\n",
       "      <td>1610612737</td>\n",
       "      <td>ATL</td>\n",
       "      <td>Atlanta Hawks</td>\n",
       "      <td>0022300286</td>\n",
       "      <td>2023-12-02</td>\n",
       "      <td>ATL @ MIL</td>\n",
       "      <td>L</td>\n",
       "      <td>239</td>\n",
       "      <td>121</td>\n",
       "      <td>45</td>\n",
       "      <td>101</td>\n",
       "      <td>0.446</td>\n",
       "      <td>15</td>\n",
       "      <td>38</td>\n",
       "      <td>0.395</td>\n",
       "      <td>16</td>\n",
       "      <td>21</td>\n",
       "      <td>0.762</td>\n",
       "      <td>15</td>\n",
       "      <td>25</td>\n",
       "      <td>40</td>\n",
       "      <td>23</td>\n",
       "      <td>11.0</td>\n",
       "      <td>4</td>\n",
       "      <td>11</td>\n",
       "      <td>14</td>\n",
       "      <td>-11.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>22023</td>\n",
       "      <td>1610612737</td>\n",
       "      <td>ATL</td>\n",
       "      <td>Atlanta Hawks</td>\n",
       "      <td>0022300272</td>\n",
       "      <td>2023-11-30</td>\n",
       "      <td>ATL @ SAS</td>\n",
       "      <td>W</td>\n",
       "      <td>241</td>\n",
       "      <td>137</td>\n",
       "      <td>49</td>\n",
       "      <td>96</td>\n",
       "      <td>0.510</td>\n",
       "      <td>14</td>\n",
       "      <td>33</td>\n",
       "      <td>0.424</td>\n",
       "      <td>25</td>\n",
       "      <td>29</td>\n",
       "      <td>0.862</td>\n",
       "      <td>8</td>\n",
       "      <td>29</td>\n",
       "      <td>37</td>\n",
       "      <td>24</td>\n",
       "      <td>14.0</td>\n",
       "      <td>2</td>\n",
       "      <td>10</td>\n",
       "      <td>25</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>22023</td>\n",
       "      <td>1610612737</td>\n",
       "      <td>ATL</td>\n",
       "      <td>Atlanta Hawks</td>\n",
       "      <td>0022300055</td>\n",
       "      <td>2023-11-28</td>\n",
       "      <td>ATL @ CLE</td>\n",
       "      <td>L</td>\n",
       "      <td>239</td>\n",
       "      <td>105</td>\n",
       "      <td>35</td>\n",
       "      <td>101</td>\n",
       "      <td>0.347</td>\n",
       "      <td>13</td>\n",
       "      <td>44</td>\n",
       "      <td>0.295</td>\n",
       "      <td>22</td>\n",
       "      <td>24</td>\n",
       "      <td>0.917</td>\n",
       "      <td>14</td>\n",
       "      <td>30</td>\n",
       "      <td>44</td>\n",
       "      <td>21</td>\n",
       "      <td>9.0</td>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>16</td>\n",
       "      <td>-23.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3629</th>\n",
       "      <td>21983</td>\n",
       "      <td>1610612737</td>\n",
       "      <td>ATL</td>\n",
       "      <td>Atlanta Hawks</td>\n",
       "      <td>0028300058</td>\n",
       "      <td>1983-11-06</td>\n",
       "      <td>ATL @ MIL</td>\n",
       "      <td>L</td>\n",
       "      <td>240</td>\n",
       "      <td>84</td>\n",
       "      <td>32</td>\n",
       "      <td>78</td>\n",
       "      <td>0.410</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.000</td>\n",
       "      <td>20</td>\n",
       "      <td>30</td>\n",
       "      <td>0.667</td>\n",
       "      <td>11</td>\n",
       "      <td>26</td>\n",
       "      <td>37</td>\n",
       "      <td>18</td>\n",
       "      <td>4.0</td>\n",
       "      <td>5</td>\n",
       "      <td>14</td>\n",
       "      <td>24</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3630</th>\n",
       "      <td>21983</td>\n",
       "      <td>1610612737</td>\n",
       "      <td>ATL</td>\n",
       "      <td>Atlanta Hawks</td>\n",
       "      <td>0028300041</td>\n",
       "      <td>1983-11-04</td>\n",
       "      <td>ATL vs. CHI</td>\n",
       "      <td>W</td>\n",
       "      <td>240</td>\n",
       "      <td>103</td>\n",
       "      <td>42</td>\n",
       "      <td>86</td>\n",
       "      <td>0.488</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1.000</td>\n",
       "      <td>18</td>\n",
       "      <td>26</td>\n",
       "      <td>0.692</td>\n",
       "      <td>19</td>\n",
       "      <td>27</td>\n",
       "      <td>46</td>\n",
       "      <td>31</td>\n",
       "      <td>14.0</td>\n",
       "      <td>13</td>\n",
       "      <td>18</td>\n",
       "      <td>27</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3631</th>\n",
       "      <td>21983</td>\n",
       "      <td>1610612737</td>\n",
       "      <td>ATL</td>\n",
       "      <td>Atlanta Hawks</td>\n",
       "      <td>0028300027</td>\n",
       "      <td>1983-11-01</td>\n",
       "      <td>ATL vs. WAS</td>\n",
       "      <td>W</td>\n",
       "      <td>240</td>\n",
       "      <td>95</td>\n",
       "      <td>38</td>\n",
       "      <td>81</td>\n",
       "      <td>0.469</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>19</td>\n",
       "      <td>30</td>\n",
       "      <td>0.633</td>\n",
       "      <td>12</td>\n",
       "      <td>29</td>\n",
       "      <td>41</td>\n",
       "      <td>20</td>\n",
       "      <td>7.0</td>\n",
       "      <td>10</td>\n",
       "      <td>16</td>\n",
       "      <td>34</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3632</th>\n",
       "      <td>21983</td>\n",
       "      <td>1610612737</td>\n",
       "      <td>ATL</td>\n",
       "      <td>Atlanta Hawks</td>\n",
       "      <td>0028300014</td>\n",
       "      <td>1983-10-29</td>\n",
       "      <td>ATL vs. DET</td>\n",
       "      <td>W</td>\n",
       "      <td>240</td>\n",
       "      <td>117</td>\n",
       "      <td>49</td>\n",
       "      <td>94</td>\n",
       "      <td>0.521</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.000</td>\n",
       "      <td>19</td>\n",
       "      <td>30</td>\n",
       "      <td>0.633</td>\n",
       "      <td>27</td>\n",
       "      <td>21</td>\n",
       "      <td>48</td>\n",
       "      <td>28</td>\n",
       "      <td>14.0</td>\n",
       "      <td>7</td>\n",
       "      <td>23</td>\n",
       "      <td>35</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3633</th>\n",
       "      <td>21983</td>\n",
       "      <td>1610612737</td>\n",
       "      <td>ATL</td>\n",
       "      <td>Atlanta Hawks</td>\n",
       "      <td>0028300005</td>\n",
       "      <td>1983-10-28</td>\n",
       "      <td>ATL @ NJN</td>\n",
       "      <td>L</td>\n",
       "      <td>240</td>\n",
       "      <td>108</td>\n",
       "      <td>41</td>\n",
       "      <td>90</td>\n",
       "      <td>0.456</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>26</td>\n",
       "      <td>38</td>\n",
       "      <td>0.684</td>\n",
       "      <td>15</td>\n",
       "      <td>18</td>\n",
       "      <td>33</td>\n",
       "      <td>14</td>\n",
       "      <td>10.0</td>\n",
       "      <td>5</td>\n",
       "      <td>17</td>\n",
       "      <td>30</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3634 rows Ã— 28 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     SEASON_ID     TEAM_ID TEAM_ABBREVIATION      TEAM_NAME     GAME_ID  \\\n",
       "0        22023  1610612737               ATL  Atlanta Hawks  0022301218   \n",
       "1        22023  1610612737               ATL  Atlanta Hawks  0022301209   \n",
       "2        22023  1610612737               ATL  Atlanta Hawks  0022300286   \n",
       "3        22023  1610612737               ATL  Atlanta Hawks  0022300272   \n",
       "4        22023  1610612737               ATL  Atlanta Hawks  0022300055   \n",
       "...        ...         ...               ...            ...         ...   \n",
       "3629     21983  1610612737               ATL  Atlanta Hawks  0028300058   \n",
       "3630     21983  1610612737               ATL  Atlanta Hawks  0028300041   \n",
       "3631     21983  1610612737               ATL  Atlanta Hawks  0028300027   \n",
       "3632     21983  1610612737               ATL  Atlanta Hawks  0028300014   \n",
       "3633     21983  1610612737               ATL  Atlanta Hawks  0028300005   \n",
       "\n",
       "       GAME_DATE      MATCHUP WL  MIN  PTS  FGM  FGA  FG_PCT  FG3M  FG3A  \\\n",
       "0     2023-12-08    ATL @ PHI  L  241  114   41  104   0.394    13    39   \n",
       "1     2023-12-06  ATL vs. BKN  L  240  113   42   94   0.447    12    35   \n",
       "2     2023-12-02    ATL @ MIL  L  239  121   45  101   0.446    15    38   \n",
       "3     2023-11-30    ATL @ SAS  W  241  137   49   96   0.510    14    33   \n",
       "4     2023-11-28    ATL @ CLE  L  239  105   35  101   0.347    13    44   \n",
       "...          ...          ... ..  ...  ...  ...  ...     ...   ...   ...   \n",
       "3629  1983-11-06    ATL @ MIL  L  240   84   32   78   0.410     0     2   \n",
       "3630  1983-11-04  ATL vs. CHI  W  240  103   42   86   0.488     1     1   \n",
       "3631  1983-11-01  ATL vs. WAS  W  240   95   38   81   0.469     0     0   \n",
       "3632  1983-10-29  ATL vs. DET  W  240  117   49   94   0.521     0     1   \n",
       "3633  1983-10-28    ATL @ NJN  L  240  108   41   90   0.456     0     0   \n",
       "\n",
       "      FG3_PCT  FTM  FTA  FT_PCT  OREB  DREB  REB  AST   STL  BLK  TOV  PF  \\\n",
       "0       0.333   19   21   0.905    23    32   55   20   3.0    4   13  23   \n",
       "1       0.343   17   18   0.944    11    38   49   25   5.0    4   12  23   \n",
       "2       0.395   16   21   0.762    15    25   40   23  11.0    4   11  14   \n",
       "3       0.424   25   29   0.862     8    29   37   24  14.0    2   10  25   \n",
       "4       0.295   22   24   0.917    14    30   44   21   9.0    3   10  16   \n",
       "...       ...  ...  ...     ...   ...   ...  ...  ...   ...  ...  ...  ..   \n",
       "3629    0.000   20   30   0.667    11    26   37   18   4.0    5   14  24   \n",
       "3630    1.000   18   26   0.692    19    27   46   31  14.0   13   18  27   \n",
       "3631      NaN   19   30   0.633    12    29   41   20   7.0   10   16  34   \n",
       "3632    0.000   19   30   0.633    27    21   48   28  14.0    7   23  35   \n",
       "3633      NaN   26   38   0.684    15    18   33   14  10.0    5   17  30   \n",
       "\n",
       "      PLUS_MINUS  \n",
       "0          -11.0  \n",
       "1           -1.0  \n",
       "2          -11.0  \n",
       "3            2.0  \n",
       "4          -23.0  \n",
       "...          ...  \n",
       "3629         NaN  \n",
       "3630         NaN  \n",
       "3631         NaN  \n",
       "3632         NaN  \n",
       "3633         NaN  \n",
       "\n",
       "[3634 rows x 28 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "BOS 1610612738\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SEASON_ID</th>\n",
       "      <th>TEAM_ID</th>\n",
       "      <th>TEAM_ABBREVIATION</th>\n",
       "      <th>TEAM_NAME</th>\n",
       "      <th>GAME_ID</th>\n",
       "      <th>GAME_DATE</th>\n",
       "      <th>MATCHUP</th>\n",
       "      <th>WL</th>\n",
       "      <th>MIN</th>\n",
       "      <th>PTS</th>\n",
       "      <th>FGM</th>\n",
       "      <th>FGA</th>\n",
       "      <th>FG_PCT</th>\n",
       "      <th>FG3M</th>\n",
       "      <th>FG3A</th>\n",
       "      <th>FG3_PCT</th>\n",
       "      <th>FTM</th>\n",
       "      <th>FTA</th>\n",
       "      <th>FT_PCT</th>\n",
       "      <th>OREB</th>\n",
       "      <th>DREB</th>\n",
       "      <th>REB</th>\n",
       "      <th>AST</th>\n",
       "      <th>STL</th>\n",
       "      <th>BLK</th>\n",
       "      <th>TOV</th>\n",
       "      <th>PF</th>\n",
       "      <th>PLUS_MINUS</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>22023</td>\n",
       "      <td>1610612738</td>\n",
       "      <td>BOS</td>\n",
       "      <td>Boston Celtics</td>\n",
       "      <td>0022301227</td>\n",
       "      <td>2023-12-08</td>\n",
       "      <td>BOS vs. NYK</td>\n",
       "      <td>W</td>\n",
       "      <td>240</td>\n",
       "      <td>133</td>\n",
       "      <td>48</td>\n",
       "      <td>91</td>\n",
       "      <td>0.527</td>\n",
       "      <td>19</td>\n",
       "      <td>47</td>\n",
       "      <td>0.404</td>\n",
       "      <td>18</td>\n",
       "      <td>21</td>\n",
       "      <td>0.857</td>\n",
       "      <td>8</td>\n",
       "      <td>26</td>\n",
       "      <td>34</td>\n",
       "      <td>24</td>\n",
       "      <td>8</td>\n",
       "      <td>5</td>\n",
       "      <td>7</td>\n",
       "      <td>19</td>\n",
       "      <td>10.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>22023</td>\n",
       "      <td>1610612738</td>\n",
       "      <td>BOS</td>\n",
       "      <td>Boston Celtics</td>\n",
       "      <td>0022301202</td>\n",
       "      <td>2023-12-04</td>\n",
       "      <td>BOS @ IND</td>\n",
       "      <td>L</td>\n",
       "      <td>239</td>\n",
       "      <td>112</td>\n",
       "      <td>46</td>\n",
       "      <td>97</td>\n",
       "      <td>0.474</td>\n",
       "      <td>12</td>\n",
       "      <td>41</td>\n",
       "      <td>0.293</td>\n",
       "      <td>8</td>\n",
       "      <td>12</td>\n",
       "      <td>0.667</td>\n",
       "      <td>13</td>\n",
       "      <td>43</td>\n",
       "      <td>56</td>\n",
       "      <td>27</td>\n",
       "      <td>5</td>\n",
       "      <td>9</td>\n",
       "      <td>17</td>\n",
       "      <td>19</td>\n",
       "      <td>-10.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>22023</td>\n",
       "      <td>1610612738</td>\n",
       "      <td>BOS</td>\n",
       "      <td>Boston Celtics</td>\n",
       "      <td>0022300275</td>\n",
       "      <td>2023-12-01</td>\n",
       "      <td>BOS vs. PHI</td>\n",
       "      <td>W</td>\n",
       "      <td>239</td>\n",
       "      <td>125</td>\n",
       "      <td>39</td>\n",
       "      <td>77</td>\n",
       "      <td>0.506</td>\n",
       "      <td>16</td>\n",
       "      <td>33</td>\n",
       "      <td>0.485</td>\n",
       "      <td>31</td>\n",
       "      <td>36</td>\n",
       "      <td>0.861</td>\n",
       "      <td>10</td>\n",
       "      <td>36</td>\n",
       "      <td>46</td>\n",
       "      <td>25</td>\n",
       "      <td>10</td>\n",
       "      <td>8</td>\n",
       "      <td>20</td>\n",
       "      <td>18</td>\n",
       "      <td>6.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>22023</td>\n",
       "      <td>1610612738</td>\n",
       "      <td>BOS</td>\n",
       "      <td>Boston Celtics</td>\n",
       "      <td>0022300053</td>\n",
       "      <td>2023-11-28</td>\n",
       "      <td>BOS vs. CHI</td>\n",
       "      <td>W</td>\n",
       "      <td>241</td>\n",
       "      <td>124</td>\n",
       "      <td>47</td>\n",
       "      <td>90</td>\n",
       "      <td>0.522</td>\n",
       "      <td>21</td>\n",
       "      <td>49</td>\n",
       "      <td>0.429</td>\n",
       "      <td>9</td>\n",
       "      <td>12</td>\n",
       "      <td>0.750</td>\n",
       "      <td>11</td>\n",
       "      <td>41</td>\n",
       "      <td>52</td>\n",
       "      <td>36</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>16</td>\n",
       "      <td>18</td>\n",
       "      <td>27.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>22023</td>\n",
       "      <td>1610612738</td>\n",
       "      <td>BOS</td>\n",
       "      <td>Boston Celtics</td>\n",
       "      <td>0022300246</td>\n",
       "      <td>2023-11-26</td>\n",
       "      <td>BOS vs. ATL</td>\n",
       "      <td>W</td>\n",
       "      <td>239</td>\n",
       "      <td>113</td>\n",
       "      <td>42</td>\n",
       "      <td>95</td>\n",
       "      <td>0.442</td>\n",
       "      <td>13</td>\n",
       "      <td>47</td>\n",
       "      <td>0.277</td>\n",
       "      <td>16</td>\n",
       "      <td>20</td>\n",
       "      <td>0.800</td>\n",
       "      <td>18</td>\n",
       "      <td>40</td>\n",
       "      <td>58</td>\n",
       "      <td>24</td>\n",
       "      <td>9</td>\n",
       "      <td>3</td>\n",
       "      <td>12</td>\n",
       "      <td>19</td>\n",
       "      <td>10.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3827</th>\n",
       "      <td>21983</td>\n",
       "      <td>1610612738</td>\n",
       "      <td>BOS</td>\n",
       "      <td>Boston Celtics</td>\n",
       "      <td>0028300052</td>\n",
       "      <td>1983-11-05</td>\n",
       "      <td>BOS @ WAS</td>\n",
       "      <td>W</td>\n",
       "      <td>240</td>\n",
       "      <td>120</td>\n",
       "      <td>46</td>\n",
       "      <td>80</td>\n",
       "      <td>0.575</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.000</td>\n",
       "      <td>28</td>\n",
       "      <td>36</td>\n",
       "      <td>0.778</td>\n",
       "      <td>5</td>\n",
       "      <td>28</td>\n",
       "      <td>33</td>\n",
       "      <td>36</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>16</td>\n",
       "      <td>26</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3828</th>\n",
       "      <td>21983</td>\n",
       "      <td>1610612738</td>\n",
       "      <td>BOS</td>\n",
       "      <td>Boston Celtics</td>\n",
       "      <td>0028300043</td>\n",
       "      <td>1983-11-04</td>\n",
       "      <td>BOS vs. IND</td>\n",
       "      <td>W</td>\n",
       "      <td>240</td>\n",
       "      <td>121</td>\n",
       "      <td>42</td>\n",
       "      <td>78</td>\n",
       "      <td>0.538</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0.000</td>\n",
       "      <td>37</td>\n",
       "      <td>44</td>\n",
       "      <td>0.841</td>\n",
       "      <td>11</td>\n",
       "      <td>34</td>\n",
       "      <td>45</td>\n",
       "      <td>28</td>\n",
       "      <td>8</td>\n",
       "      <td>5</td>\n",
       "      <td>22</td>\n",
       "      <td>26</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3829</th>\n",
       "      <td>21983</td>\n",
       "      <td>1610612738</td>\n",
       "      <td>BOS</td>\n",
       "      <td>Boston Celtics</td>\n",
       "      <td>0028300033</td>\n",
       "      <td>1983-11-02</td>\n",
       "      <td>BOS vs. MIL</td>\n",
       "      <td>W</td>\n",
       "      <td>240</td>\n",
       "      <td>119</td>\n",
       "      <td>44</td>\n",
       "      <td>78</td>\n",
       "      <td>0.564</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>31</td>\n",
       "      <td>38</td>\n",
       "      <td>0.816</td>\n",
       "      <td>14</td>\n",
       "      <td>24</td>\n",
       "      <td>38</td>\n",
       "      <td>26</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3830</th>\n",
       "      <td>21983</td>\n",
       "      <td>1610612738</td>\n",
       "      <td>BOS</td>\n",
       "      <td>Boston Celtics</td>\n",
       "      <td>0028300019</td>\n",
       "      <td>1983-10-29</td>\n",
       "      <td>BOS @ CLE</td>\n",
       "      <td>W</td>\n",
       "      <td>240</td>\n",
       "      <td>108</td>\n",
       "      <td>44</td>\n",
       "      <td>88</td>\n",
       "      <td>0.500</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0.000</td>\n",
       "      <td>20</td>\n",
       "      <td>29</td>\n",
       "      <td>0.690</td>\n",
       "      <td>13</td>\n",
       "      <td>31</td>\n",
       "      <td>44</td>\n",
       "      <td>25</td>\n",
       "      <td>12</td>\n",
       "      <td>7</td>\n",
       "      <td>13</td>\n",
       "      <td>22</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3831</th>\n",
       "      <td>21983</td>\n",
       "      <td>1610612738</td>\n",
       "      <td>BOS</td>\n",
       "      <td>Boston Celtics</td>\n",
       "      <td>0028300006</td>\n",
       "      <td>1983-10-28</td>\n",
       "      <td>BOS @ DET</td>\n",
       "      <td>L</td>\n",
       "      <td>240</td>\n",
       "      <td>121</td>\n",
       "      <td>40</td>\n",
       "      <td>86</td>\n",
       "      <td>0.465</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>0.250</td>\n",
       "      <td>40</td>\n",
       "      <td>44</td>\n",
       "      <td>0.909</td>\n",
       "      <td>12</td>\n",
       "      <td>35</td>\n",
       "      <td>47</td>\n",
       "      <td>23</td>\n",
       "      <td>9</td>\n",
       "      <td>6</td>\n",
       "      <td>22</td>\n",
       "      <td>38</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>3832 rows Ã— 28 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     SEASON_ID     TEAM_ID TEAM_ABBREVIATION       TEAM_NAME     GAME_ID  \\\n",
       "0        22023  1610612738               BOS  Boston Celtics  0022301227   \n",
       "1        22023  1610612738               BOS  Boston Celtics  0022301202   \n",
       "2        22023  1610612738               BOS  Boston Celtics  0022300275   \n",
       "3        22023  1610612738               BOS  Boston Celtics  0022300053   \n",
       "4        22023  1610612738               BOS  Boston Celtics  0022300246   \n",
       "...        ...         ...               ...             ...         ...   \n",
       "3827     21983  1610612738               BOS  Boston Celtics  0028300052   \n",
       "3828     21983  1610612738               BOS  Boston Celtics  0028300043   \n",
       "3829     21983  1610612738               BOS  Boston Celtics  0028300033   \n",
       "3830     21983  1610612738               BOS  Boston Celtics  0028300019   \n",
       "3831     21983  1610612738               BOS  Boston Celtics  0028300006   \n",
       "\n",
       "       GAME_DATE      MATCHUP WL  MIN  PTS  FGM  FGA  FG_PCT  FG3M  FG3A  \\\n",
       "0     2023-12-08  BOS vs. NYK  W  240  133   48   91   0.527    19    47   \n",
       "1     2023-12-04    BOS @ IND  L  239  112   46   97   0.474    12    41   \n",
       "2     2023-12-01  BOS vs. PHI  W  239  125   39   77   0.506    16    33   \n",
       "3     2023-11-28  BOS vs. CHI  W  241  124   47   90   0.522    21    49   \n",
       "4     2023-11-26  BOS vs. ATL  W  239  113   42   95   0.442    13    47   \n",
       "...          ...          ... ..  ...  ...  ...  ...     ...   ...   ...   \n",
       "3827  1983-11-05    BOS @ WAS  W  240  120   46   80   0.575     0     2   \n",
       "3828  1983-11-04  BOS vs. IND  W  240  121   42   78   0.538     0     2   \n",
       "3829  1983-11-02  BOS vs. MIL  W  240  119   44   78   0.564     0     0   \n",
       "3830  1983-10-29    BOS @ CLE  W  240  108   44   88   0.500     0     3   \n",
       "3831  1983-10-28    BOS @ DET  L  240  121   40   86   0.465     1     4   \n",
       "\n",
       "      FG3_PCT  FTM  FTA  FT_PCT  OREB  DREB  REB  AST  STL  BLK  TOV  PF  \\\n",
       "0       0.404   18   21   0.857     8    26   34   24    8    5    7  19   \n",
       "1       0.293    8   12   0.667    13    43   56   27    5    9   17  19   \n",
       "2       0.485   31   36   0.861    10    36   46   25   10    8   20  18   \n",
       "3       0.429    9   12   0.750    11    41   52   36    6    9   16  18   \n",
       "4       0.277   16   20   0.800    18    40   58   24    9    3   12  19   \n",
       "...       ...  ...  ...     ...   ...   ...  ...  ...  ...  ...  ...  ..   \n",
       "3827    0.000   28   36   0.778     5    28   33   36    7    7   16  26   \n",
       "3828    0.000   37   44   0.841    11    34   45   28    8    5   22  26   \n",
       "3829      NaN   31   38   0.816    14    24   38   26    7    7   18  18   \n",
       "3830    0.000   20   29   0.690    13    31   44   25   12    7   13  22   \n",
       "3831    0.250   40   44   0.909    12    35   47   23    9    6   22  38   \n",
       "\n",
       "      PLUS_MINUS  \n",
       "0           10.0  \n",
       "1          -10.0  \n",
       "2            6.0  \n",
       "3           27.0  \n",
       "4           10.0  \n",
       "...          ...  \n",
       "3827         NaN  \n",
       "3828         NaN  \n",
       "3829         NaN  \n",
       "3830         NaN  \n",
       "3831         NaN  \n",
       "\n",
       "[3832 rows x 28 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "nba_teams = teams.get_teams()\n",
    "nba_teams_df = pd.DataFrame(teams.get_teams())\n",
    "# print(f'nba_teams_df : {type(nba_teams_df)}')\n",
    "# display(nba_teams_df)\n",
    "\n",
    "# get certain nba team ; ATL Hawks in this ex\n",
    "# nba_team = [team for team in nba_teams if team['abbreviation'] == 'ATL'][0]\n",
    "\n",
    "for team, cap in zip(nba_teams, range(2)):\n",
    "    print(team['abbreviation'], team['id'])\n",
    "    # get id of team for this iteration\n",
    "    nba_team_id = team['id']\n",
    "    \n",
    "    # gamefinder is <class 'nba_api.stats.endpoints.leaguegamefinder.LeagueGameFinder'> (black box)\n",
    "    gamefinder = leaguegamefinder.LeagueGameFinder(team_id_nullable = nba_team_id)\n",
    "    # get all games for a particular team ( .get_data_frames() is a list of only one pd.df )\n",
    "    games = gamefinder.get_data_frames()[0]\n",
    "    # get all games for team where \n",
    "    display( games )\n",
    "#     games_sznid = games.groupby(games.SEASON_ID.str[-4:]).count()\n",
    "#     print( 2023 - team['year_founded'] )\n",
    "#     display(games_sznid)\n",
    "    \n",
    "#     display(games.groupby(games.SEASON_ID.str[-4:])[['GAME_ID']].count().loc['2015':])    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c0edc704",
   "metadata": {},
   "outputs": [],
   "source": [
    "# query for games where the Celtics were playing\n",
    "gamefinder = leaguegamefinder.LeagueGameFinder(team_id_nullable = nba_team_id)\n",
    "# The first DataFrame of those returned is what we want.\n",
    "games = gamefinder.get_data_frames()[0]\n",
    "print(games.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3c8de1e6",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Subset the games to when the last 4 digits of SEASON_ID were 2017.\n",
    "games_1718 = games[games.SEASON_ID.str[-4:] == '2017']\n",
    "print(games_1718.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f50646dd",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Subset the games to where MATCHUP contains 'TOR'.\n",
    "raps_games_1718 = games_1718[games_1718.MATCHUP.str.contains('TOR')]\n",
    "print(raps_games_1718.head())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b1ab1cc6",
   "metadata": {},
   "outputs": [],
   "source": [
    "last_raps_game = raps_games_1718.sort_values('GAME_DATE').iloc[-1]\n",
    "print(last_raps_game)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "002b92ce",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Combine the game rows into one. By default, the home team will be TEAM_A.\n",
    "game_df = combine_team_games(full_game)\n",
    "print(game_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6138cf62",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
